name: Monitor CNJ

on:
  schedule:
    # A cada hora
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-24.04
    steps:
      - name: 1. Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: 2. Configurar ambiente Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'scripts/package.json'
      
      - name: 3. Criar diret√≥rio de downloads
        run: mkdir -p scripts/downloads

      - name: 4. Restaurar tabela da execu√ß√£o anterior
        # Usando v3 e, mais importante, 'ignore'
        uses: dawidd6/action-download-artifact@v3
        with:
          name: prev_tabela
          if_no_artifact_found: ignore 

      - name: 5. Instalar depend√™ncias do sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 libatk1.0-0 libatk-bridge2.0-0 \
            libcups2 libxss1 libasound2t64

      - name: 6. Instalar depend√™ncias do Node.js
        run: |
          cd scripts
          npm install

      - name: 7. Executar o rob√¥ de monitoramento
        id: monitor
        run: |
          rm -f scripts/monitor_flag.txt
          node scripts/monitor-puppeteer.js
          
          if [ -f scripts/monitor_flag.txt ]; then
            echo "‚úÖ Mudan√ßas detectadas!"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Nenhuma mudan√ßa detectada."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: 8. Enviar notifica√ß√£o via Telegram (se houver mudan√ßas)
        if: steps.monitor.outputs.has_changes == 'true'
        run: node scripts/send_telegram_file.js
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: 9. Upload dos relat√≥rios e screenshots (se houver mudan√ßas)
        if: steps.monitor.outputs.has_changes == 'true'
        uses: actions/upload-artifact@main
        with:
          name: Relatorios-CNJ-${{ github.run_number }}
          path: |
            scripts/downloads/Diferencas_CNJ.xlsx
            scripts/downloads/Diferencas_CNJ_TJMT.xlsx
            scripts/downloads/Pr√™mioGeral-*.xlsx
            scripts/downloads/Pr√™mioTJMT-*.xlsx
            scripts/downloads/screenshot_initial_load.png
          if-no-files-found: warn

      - name: 10. Upload da nova tabela base para a pr√≥xima execu√ß√£o
        # Este passo sempre roda para garantir que a pr√≥xima execu√ß√£o tenha uma base para comparar
        if: always()
        uses: actions/upload-artifact@main
        with:
          # O nome 'prev_tabela' √© fundamental, pois √© o que o passo 4 procura
          name: prev_tabela
          path: scripts/downloads/prev_tabela.xlsx
          if-no-files-found: fail

      - name: 11. Notificar falha via Telegram
        if: failure()
        run: |
          MESSAGE="üö® Workflow Monitor CNJ falhou! Verifique o log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE"
